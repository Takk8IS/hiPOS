name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
          cache: npm

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
          targets: |
            aarch64-apple-darwin
            x86_64-unknown-linux-gnu
            x86_64-pc-windows-msvc

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get Version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package.json
          prop_path: version

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: npm ci

      - name: Next.js Build
        env:
          NEXT_TELEMETRY_DISABLED: 1
          CI: true
          NODE_ENV: production
        run: npm run build

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ steps.version.outputs.version }}
          releaseName: 'hiPOS v${{ steps.version.outputs.version }}'
          releaseBody: |
            ## hiPOS v${{ steps.version.outputs.version }}

            ### Downloads
            - Windows: `.msi` installer
            - macOS: `.dmg` installer and `.app` bundle
            - Linux: `.deb` package and `.AppImage` portable executable

            ### Notes
            - This is an automated release build
            - Assets will be attached automatically after all builds complete
          releaseDraft: true
          prerelease: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hipos-v${{ steps.version.outputs.version }}-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
            src-tauri/target/release/bundle/**/*.msi
