name: Build and Release
on:
  push:
    branches: [main]
    tags:
      - 'v*'
  release:
    types: [created]

permissions:
  contents: write
  packages: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4

    - name: Verify version
      id: version
      shell: bash
      run: node verify-version.js
      env:
        CARGO_TERM_COLOR: always

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.11.1
        cache: 'npm'
        
    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Install Rust (stable)
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev
        
    - name: Install dependencies (macos only)
      if: matrix.platform == 'macos-latest'
      run: |
        rustup target add aarch64-apple-darwin

    - name: Install frontend dependencies
      run: npm ci
    - name: Build frontend
      run: npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1
        CI: true
        NODE_ENV: production

    - name: Build Tauri
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: v${{ steps.version.outputs.version }}
        releaseName: 'hiPOS v${{ steps.version.outputs.version }}'
        releaseBody: |
          ## hiPOS v${{ steps.version.outputs.version }}

          ### Downloads
          - Windows: `.msi` installer
          - macOS: `.dmg` installer and `.app` bundle
          - Linux: `.deb` package and `.AppImage` portable executable

          ### Notes
          - This is an automated release build
          - Assets will be attached automatically after all builds complete
        releaseDraft: true
        prerelease: false

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hipos-v${{ steps.version.outputs.version }}-${{ matrix.platform }}
        path: |
          src-tauri/target/release/bundle/**/*.deb
          src-tauri/target/release/bundle/**/*.AppImage
          src-tauri/target/release/bundle/**/*.dmg
          src-tauri/target/release/bundle/**/*.app
          src-tauri/target/release/bundle/**/*.msi

